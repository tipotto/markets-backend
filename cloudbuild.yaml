steps:
  - id: 'Restore dependencies'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    entrypoint: 'bash'
    args: ['-c', './restore-cache.sh']

  - id: 'Create env file'
    name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo PORT=8080 >> .env &&
        echo PROD_PYTHON_SEARCH_SCRIPT="/var/www/api/app/python/search.py" >> .env &&
        echo PROD_PYTHON_ANALYZE_SCRIPT="/var/www/api/app/python/analyze.py" >> .env &&

  - id: 'Integrate files into api directory'
    name: 'ubuntu'
    entrypoint: 'bash'
    args: ['-c', './build.sh']

  - id: 'Transfer api directory with scp'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'compute',
        'scp',
        '--project',
        'markets-jp',
        '--zone',
        'asia-northeast1-b',
        '--port',
        '49152',
        '--recurse',
        './api',
        'markets-jp:/var/www',
      ]

  - id: 'Backup dependencies'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    entrypoint: 'bash'
    args: ['-c', './save-cache.sh']

options:
  env:
    - CACHE_FLAG_PATH=/workspace/cache_flag.txt
    - CACHE_DIR_PATH=/workspace/node_modules
    - CACHE_BUCKET_NAME=backend-node-modules
    - SECONDS_IN_A_MONTH=2629743

timeout: 1800s
